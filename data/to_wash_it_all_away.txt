When I was in graduate school in Ann Arbor, I had a friend who was deeply involved with the environmentalist movement. He purchased his food from local farmers’ markets, and he commuted by bike instead of by car to reduce his carbon footprint, and he maintained a horrid compost bin that will probably be the origin of the next flu pandemic. One day, he told me that he was going to visit a farm for a week. I asked him why, and he said that he wanted to “get closer to the land,” a phrase that you can only say with a straight face if you’re narrating a documentary about ancient South American tribes. I told my friend that the land didn’t want to get closer to him, and if he really looked at the land, he’d see that it was not composed of delicious organic trail mix, but famine and vultures and backbreaking labor involving wheelbarrows and generally unacceptable quantities of insects. He responded with an extended lecture about eco-responsibility, a lecture that I immediately forgot because I realized that my naïve friend was going to die on that farm. So, I told my friend that he shouldn’t be afraid to end his trip early if he wasn’t having a good time. He smiled at me, the way that people in slasher movies smile before they get chopped up, and he left for the farm. Precisely 37 hours later, he called me on the phone. I asked him how everything was going, and he made a haunting, elegiac noise, like a foghorn calling out for its mate. I asked him to describe his first day, and he said that his entire existence revolved around bleating things: bleating goats that wanted to be fed, and bleating crows that wanted to steal the food that he gave the bleating goats, and bleating farm machines that were composed of spinning metal blades and had no discernable purpose besides enrolling you in the “Hook Hand of the Month” club. I asked my friend when he was coming back home, and he said that he was calling me from the Ann Arbor train station; he had already returned. And then he let out that foghorn noise, that awful, lingering sound, and I thought, MAYBE THAT’S THE FIRST SYMPTOM OF COMPOST BIN FLU.Computer scientists often look at Web pages in the same way that my friend looked at farms. People think that Web browsers are elegant computation platforms, and Web pages are light, f luffy things that you can edit in Notepad as you trade ironic comments with your friends in the coffee shop. Nothing could be further from the truth. A modern Web page is a catastrophe. It’s like a scene from one of those apocalyptic medieval paintings that depicts what would happen if Galactus arrived: people are tumbling into fiery crevasses and lamenting various lamentable things and hanging from playground equipment that would not pass OSHA safety checks. This kind of stuff is exactly what you’ll see if you look at the HTML, CSS, and JavaScript in a modern Web page. Of course, no human can truly “look” at this content, because a Web page is now like V’Ger from the first “Star Trek” movie, a piece of technology that we once understood but can no longer fathom, a thrashing leviathan of code and markup written by people so untrustworthy that they’re not even third parties, they’re fifth parties who weren’t even INVITED to the party, but who showed up anyways because the hippies got it right and free love or whatever. I’m pretty sure that the Web browser is one of the “dens of iniquity” that I keep hearing about on Fox News; I would verify this using a Web search, but a Web search would require me to use a browser, AND THIS IS EX ACTLY WHAT BICOASTAL LIBER AL ELITES WANT ME TO DO.


Describing why the Web is horrible is like describing why it’s horrible to drown in an ocean composed of pufferfish that are pregnant with tiny Freddy Kruegers—each detail is horrendous in isolation, but the aggregate sum is delightfully arranged into a hate f lower that blooms all year. For example, the World Wide Web Consortium (W3C) provides “official”  specificationsfor many client-side Web technologies. Unfortunately, these specifications are binding upon browser vendors in the same way that you can ask a Gila monster to meet you at the airport, but that gila monster may, in fact, have better things to do.  Each W3C document is filled with alienating sentences that largely consist of hyperlinks to different hyperlinks.

Given the unbearable proliferation of Web standards, and the comically ill-expressed semantics of those standards, browser vendors should just give up and tell society to stop asking for such ridiculous things. However, this opinion is unpopular, because nobody will watch your TED talk if your sense of optimism is grounded in reality. I frequently try to explain to my friends why they should abandon Web pages and exchange information using sunlight ref lected from mirrors, or the enthusiastic waving of colored flags. My friends inevitably respond with a spiritually vacant affirmation like, “People invented flying machines, so we can certainly make a good browser!” Unfortunately, defining success for a flying machine is easy (“I’M ME BUT I’M A BIRD”), whereas defining success for a Web browser involves Cascading Style Sheets, a technology which intrinsically dooms any project to epic failure. For the uninitiated, Cascading Style Sheets are a cryptic language developed by the Freemasons to obscure the visual nature of reality and encourage people to depict things using ASCII art. Ostensibly, CSS files allow you to separate the definition of your content from the definition of how that content looks—using CSS, you can specify the layout for your HTML tags, as well as the fonts and the color schemes used by those tags. Sadly, the relationship between CSS and HTML is the same relationship that links the instructions for building your IKEA bed, and the unassembled, spiteful wooden planks that purportedly contain latent bed structures. CSS is not so much a description of what your final page will look like, but rather a loose, high-level overview of what could happen to your page, depending on the weather, the stock market, and how long it’s been since you last spoke to your mother. Like a naïve  Dungeon Master untouched by the sorrow of adulthood, you create imaginative CSS classes for your <div> tags and your <span> tags, assigning them strengths and weaknesses, and defining the roles that they will play in the larger, uplifting narrative of your HTML. Everything is assembled in its proper place; you load your page in a browser and prepare yourself for a  glorious victory. However, you quickly discover that your elf tag is over-weight. THE ELF CAN NEVER BE OVERWEIGHT. Even worse, your barbarian tag does not have an oversized hammer or axe. Without an oversized hammer or axe, YOUR BARBARIAN IS JUST AN ILLITER ATE STEROID USER. And then you look at your wizard tag, and you see that he’s not an old white man with a flowing beard, but a young black man from Brooklyn. FOR COMPLEX REASONS THAT ARE ROOTED IN EUROPEAN COLONIAL NARR ATIVES, YOUR  WIZARD MUST BE AN OLD WHITE MAN WITH A FLOWING BEARD,NOT A BLACK MAN WITH HIPSTER SHOES AND A FANTASTIC VINYL COLLECTION. Such are the disasters that CSS will wroughth upon thee. Or wrought *at* thee. To be honest, I don’t know how to conjugate or spell “wrought,” but my point is undoubtedly understood. See Figure 1 for a concrete example of CSS’s wroughtiness. Or CSS’ (no trailing “s”) wroughtiness. MY NON-CASCADING STYLE MANUALS FIGHT FOR MY SOUL.When you’re a Web developer, CSS is just one of your  worries. The aggregate stack of Web technologies is so fragile that developers just accept a world in which various parts of a Web page will fail at random times. Apparently this is okay because e-commerce isn’t a serious thing, and if you really wanted a secure banking experience, you’d visit the bank in person like someone from the 1800s instead of accessing a banking Web site that is constantly (but silently) vomiting execution errors to the console log (a console log which the browser does not show by default, because if you knew about it, and you read its tales of woe, you’d abandon computer science and become a maker of fine wooden shoes). In Figure 2, I provide an unaltered example of such a console log; the log was generated by a real Web page from a popular site.

An interpretation of the remaining errors is left as an exercise to the reader. Note that understanding the eighth error requires a Ouija board, the eye of a newt, and the whispering of a secret to a long-lost friend.At this point, it should be intuitively obvious that different browsers may or may not produce the same error log for the same page. In general, if a Web page has more than three bits of entropy, different browsers will generate extravagantly unique mappings between the Web developer’s intentions and the schizophrenic beast palette that browsers use to paint the world. Thus, picking the “best browser” is like playing one of those horrid trust-building exercises where you decide then your coworkers berate you for making different tradeoffs than they made, even though there is no partial ordering that relates scuba diving accidents in which you lose your ears and eyes, and industrial accidents in which you lose your nose and tongue. All options are bad options; it’s a world of lateral moves. Indeed, trying to pick the best browser is like trying to decide which of your worthless children should inherit the  family business. Little Oliver refuses to accept society’s notion of what an event handling loop should do, so whenever the user presses a key on the keyboard, Oliver does not fire one keyPress event, but instead three keyDown events, a keyUp event, and the deleted saxophone solo from Mozart’s eighth symphony. Dearest Fiona, an unrepentant workaholic, designed her browser so that when you “close” it, the GUI goes away, but the underlying process lingers in the background, silent and angry, slowly consuming entries in kernel tables and making it impossible to restart the browser without receiving the error message “Somewhere in this world, another copy of the browser is running; find Carmen Sandiego and she will reveal the truth.” Beloved Christopher, in an attempt to make his browser fast and lightweight, decided to replace his Flash plugin with code that prints “Shockwave has crashed” and then immediately dereferences a NULL pointer; this ensures that most attempts to watch a video will end with you wishing for the simpler audiovisual pleasures of a woodcut or cave painting. And poor IE6, voted “Least Likely to Succeed Because IE6 Is Not a Proper Christian Name,” manages to stumble through the world while surviving more assassination attempts than Fidel Castro.Each browser is reckless and fanciful in its own way, but all browsers share a love of epic paging to disk. Not an infrequent showering of petite I/Os that are aligned on the allocation boundaries of the file system—I mean adversarial thunder-snows of reads and writes, a primordial deluge that makes you gather your kinfolk and think about which things you need two of, and what the consequences would be if you didn’t bring fire ants, because fire ants ruin summers. Browsers don’t require a specific reason to thrash the disk; instead, paging is a way of life for browsers, a leisure activity that is fulfilling in and of itself. If you’re not a computer scientist or a tinkerer, you just accept the fact that going to CNN.com will cause the green blinky light with the cylinder icon to stay green and not blinky. However, if you know how computers work, the incessant paging drives you mad. It turns you into Torquemada, a wretched figure consumed by the fear that your ideological system is an elaborate lie designed to hide the excessive disk seeks of shadowy overlords.


Of course, the most popular advice for solving any browser problem is to clear your browser cache. It is definitely true that emptying the cache will sometimes help, in the same sense that if you’re poor, kicking a tree will sometimes lead to a  hilarious series of events that conclude with you finding a big bag of money on the ground with a note that says, “Spend it all! XOXO, Life.” Unfortunately, kicking a tree does not typically lead to riches, so your faith-based act of tree assault really just makes you a savage, tree-kicking monster who will be vilified by children and emotionally sensitive adults. Similarly, your arbitrary clearing of the browser cache, however well-intentioned, is just a topical anesthetic to brief ly dull the pain of existence. Clearing the cache to fix a Web browser is like when your dad was driving you to kindergarten, and the car started to smoke, and he tried to fix the car by banging on the hood three times and then asking you if you could still smell the carbon monoxide, and you said, “Yeah, it’s better,” because you didn’t want to expose your dad as a fraud, and then both of you rode to school in silence as you struggled to remain conscious.So, yes, it would be great if fixing your browser involved actions that were not semantically equivalent to voodoo. But, on the bright side, things could always be worse. For example, it would definitely be horrible if your browser’s scripting language combined the prototype-based inheritance of Self, a quasi-functional aspect borrowed from LISP, a structured syntax adapted from C, and an aggressively asynchronous I/O model that requires elaborate callback chains that span multiple generations of hard-working Americans. OH NO I’VE JUST DESCRIBED JAVASCRIPT. What an unpleasant turn of events! People were begging for a combination of Self, LISP, and C in the same way that the denizens of Middle Earth were begging Saruman to breed Orcs and men to make Uruk-hai. Orcs and men were doing a fine job of struggling in their separate communities—creating a new race with the drawbacks of both is not a good way to win popularity contests. But despite its faults, JavaScript has become widespread. Discovering why this happened is similar to understanding the causes for World War I—everyone agrees on the top five reasons, but everyone ranks those causes differently. The basic story is that, in the ’90s, when JavaScript and Java were competing for client-side supremacy, Java applets were horrendously slow and lacked a story for interacting with HTML; in contrast, JavaScript was only semi-horrendously slow, and it had a bad (but extant) story for interacting with HTML. So, Java lost, despite facts like this.

I could go on and on about the reasons why JavaScript is a cancer upon the world. I know that there are people who like JavaScript, and I hope that these people find the mental health services that they so desperately need. I don’t know all of the answers in life, but I do know all of the things which aren’t the answers, and JavaScript falls into the same category as Scientology, homeopathic medicine, and making dogs wear tiny sweaters due to a misplaced belief that this is what dogs would do if they had access to looms and opposable thumbs.In summary, Web browsers are like quantum physics: they offer probabilistic guarantees at best, and anyone who claims to fully understand them is a liar. At this stage in human development, there are big problems to solve: climate change, heart disease, the poor financial situation of Nigerian princes who want to contact you directly. With all of these problems unsolved, Web browsing is a terrible way to spend our time; the last thing that we should do is run unstable hobbyist operating systems that download strange JavaScript files from people we don’t know. Instead, we should exchange information using fixed-length ASCII messages written in a statically verifiable subset of Latin, with images represented as mathematical combinations of line segments, arcs, and other timeless shapes described by dead philosophers who believed that minotaurs were real but incapable of escaping mazes. That is the kind of clear thinking that will help us defeat the space Egyptians that emerge from the StarGates. Or whatever. I’m an American and I don’t really understand history, but I strongly believe that Greeks spoke Latin to defeat intergalactic Egyptians. #TeachTheControversy! Anyways, my point is that browsers are too complex to be trusted. Unfortunately, youth is always wasted on the young, and the current generation of software developers is convinced that browsers need more features, not fewer. So, we are encouraged to celebrate the fact that browsers turn our computers into little Star Wars cantinas where everyone is welcome and you can drink a blue drink if you want to drink a blue drink and if something bad happens, then maybe  a Jedi will save you, and if not, HEY IT’S A STAR WARS CANTINA YESSSSS. Space cantinas are fun, but they’re just a fantasy; they’re just a series of outlandish details stitched together to amuse and entertain. You have to open your eyes and see that in the real, non-hyperbolic world that you actually inhabit, your browser will frequently stop playing a video and then display flashing epilepsy pixels while making the sound that TVs make in Japanese horror movies before a pasty sala - mander child steps out of the screen and voids your warranty. That’s a thing which could actually happen, and we should wash it all away.
